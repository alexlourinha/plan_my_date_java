package com.alexlourinha.planmydate.controllers;

import com.alexlourinha.planmydate.entities.Activity;
import com.alexlourinha.planmydate.service.ActivityService;
import java.sql.Date;
import java.time.LocalDate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * The main controller.
 */
@Controller
public class MainController {

  @Autowired // This means to get the bean called activityRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private ActivityService activityService;

  @PostMapping(path="/create") // Map ONLY POST Requests
  public @ResponseBody String createNewActivity (@RequestParam String title,
                                                 @RequestParam String content,
                                                 @RequestParam String createdBy) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Activity n = new Activity();
    n.setTitle(title);
    n.setContent(content);
    n.setCreatedBy(createdBy);
    n.setCreatedOn(String.valueOf(LocalDate.now()));
    activityService.saveActivity(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Activity> getAllActivities() {
    // This returns a JSON or XML with the users
    return activityService.listAllActivities();
  }

  @GetMapping("/activities")
  public String activities(Model model) {
    Object activities = activityService.listAllActivities();
    model.addAttribute("activities", activities);
    return "activities";
  }

  @GetMapping("/create")
  public String createNewActivity (Model model) {
    Activity activity = new Activity();
    model.addAttribute("activity", activity);
    return "create";
  }


}
